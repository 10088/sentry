name: js build and lint

on:
  # Only runs webpack on master to save bundle size info into artifacts
  # which are then used on PRs to compare against
  push:
    branches:
      - master
  pull_request:

jobs:
  npm-install-action:
    name: yarn w/ npm-install action
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Internal github app token
        id: token
        uses: getsentry/action-github-app-token@v1
        continue-on-error: true
        with:
          app_id: ${{ secrets.SENTRY_INTERNAL_APP_ID }}
          private_key: ${{ secrets.SENTRY_INTERNAL_APP_PRIVATE_KEY }}

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@master
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1
        if: steps.changes.outputs.frontend == 'true'

      - uses: bahmutov/npm-install@v1
        if: steps.changes.outputs.frontend == 'true'

  yarn:
    name: yarn
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Internal github app token
        id: token
        uses: getsentry/action-github-app-token@v1
        continue-on-error: true
        with:
          app_id: ${{ secrets.SENTRY_INTERNAL_APP_ID }}
          private_key: ${{ secrets.SENTRY_INTERNAL_APP_PRIVATE_KEY }}

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@master
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1
        if: steps.changes.outputs.frontend == 'true'

      # See https://github.com/actions/cache/blob/master/examples.md#node---yarn for example
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        if: steps.changes.outputs.frontend == 'true'
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        if: steps.changes.outputs.frontend == 'true'
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-testing-${{ hashFiles('yarn.lock', 'api-docs/yarn.lock') }}

      - name: Install dependencies
        if: steps.changes.outputs.frontend == 'true'
        run: yarn install --frozen-lockfile

  typescript-and-lint:
    name: pnpm
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Internal github app token
        id: token
        uses: getsentry/action-github-app-token@v1
        continue-on-error: true
        with:
          app_id: ${{ secrets.SENTRY_INTERNAL_APP_ID }}
          private_key: ${{ secrets.SENTRY_INTERNAL_APP_PRIVATE_KEY }}

      - name: Check for frontend file changes
        uses: getsentry/paths-filter@master
        id: changes
        with:
          list-files: shell
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      - uses: volta-cli/action@v1
        if: steps.changes.outputs.frontend == 'true'

      - name: Cache .pnpm-store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install pnpm
        run: |
          volta install node
          volta install pnpm # volta causes recommended install methods to not work

      - name: pnpm Build
        run: pnpm install
